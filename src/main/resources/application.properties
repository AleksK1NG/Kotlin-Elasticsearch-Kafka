server.port=8000
spring.application.name=search-microservice
server.shutdown=graceful


springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true


elasticsearch.host=localhost
elasticsearch.mappings-index-name=products
elasticsearch.mappings-index-alias-name=products-alias
elasticsearch.port=9200
elasticsearch.mappings-path=classpath:mappings.json
elasticsearch.keyboard-layout-mappings-path=classpath:translate.json


spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.StringOrBytesSerializer
spring.kafka.consumer.group-id=search-microservice
spring.kafka.consumer.batch-queue-size=100

logging.level.org.apache.kafka=warn

microservice.kafka.topics.index-product=index-product
microservice.kafka.groupId=search-microservice
microservice.kafka.default-concurrency=10

management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoint.health.group.readiness.include=readinessState,customCheck
management.endpoint.health.group.liveness.include=livenessState,customCheck

faker.locale=ru
faker.count=100
faker.enable=false

